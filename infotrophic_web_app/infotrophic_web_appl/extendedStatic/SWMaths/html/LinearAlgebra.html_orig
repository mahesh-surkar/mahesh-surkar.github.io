<! DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
     <meta name="title" content="Linear Algebra">
     <meta name="keywords" content="Linear Algebra">
     <meta name="author" content="InfoTrophic.com">
     <meta name="displaySection" content="Mathematics:Linear Algebra">
     <meta name="description" content="Understanding linear algebra.">
     {% load staticfiles %}
        
     <link rel="stylesheet" href="static/jquery/css/jquery-ui.css">
     <script type="text/javascript" src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
     <script type="text/javascript" src="static/jquery/js/jquery-ui.min.js"></script> 
     
      <script src="static/mathlex/js/mathlex.js"></script>
       
        <script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
       
   
     <link rel="stylesheet" type="text/css" media="screen" href="{% static as %}{{ contentCSS }}"> </link>
     <script type="text/javascript" src="static/simpleWeb/js/SimpleSlide.js"></script>     
     <script type="text/javascript" src="static/SWextended/js/LinearAlgebra.js"></script>     
     <script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script> 
  </head>
  <body>
  

        <h1>MathLex Sample</h1>
        <h2>A Simple Calculator</h2>
        <input type="text" id="math-input" placeholder="Type math here">
        <div id="math-display">\[ \]</div>
        <input type="button" id="send-math" value="Calculate">
        <div id="math-output">\[ \]</div>
        <script>
            $(document).ready(function () {
                // get MathJax output object
                var mjDisplayBox, mjOutBox;
                MathJax.Hub.Queue(function () {
                    mjDisplayBox = MathJax.Hub.getAllJax('math-display')[0];
                    mjOutBox = MathJax.Hub.getAllJax('math-output')[0];
                });

                // "live update" MathJax whenever a key is pressed
                $('#math-input').on('keyup', function (evt) {
                    var math = $(this).val();
                    $(this).css('color', 'black');
                    if (math.length > 0) {
                        try {
                            var tree = MathLex.parse(math),
                                latex = MathLex.render(tree, 'latex');
                            MathJax.Hub.Queue(['Text', mjDisplayBox, latex]);
                        } catch (err) {
                            $(this).css('color', 'red');
                        }
                    } else {
                        // clear display and output boxes if input is empty
                        MathJax.Hub.Queue(['Text', mjDisplayBox, '']);
                        MathJax.Hub.Queue(['Text', mjOutBox, '']);
                    }
                });

                // send output to sage server
                $('#send-math').on('click', function (evt) {
                    var math = $('#math-input').val();
                    if (math.length > 0) {
                        try {
                            var tree = MathLex.parse(math),
                                sageCode = MathLex.render(tree, 'sage');
                            
                            $.ajaxSetup({
                                crossDomain: true                                
                            });
                            
                            $.post('http://aleph.sagemath.org/service?callback=?',
                                    { code: 'print latex('+sageCode+')' }, function (data) {
                                // HACK: Firefox does not convert data to JSON
                                if (typeof(data) === 'string') { data = $.parseJSON(data); }
                                // AJAX success callback
                                if (data.success) {
                                    MathJax.Hub.Queue(['Text', mjOutBox, data.stdout]);
                                } else {
                                    MathJax.Hub.Queue(['Text', mjOutBox, '\\text{Sage could not understand that input}']);
                                }
                                
                            });
                        } catch (err) {
                            MathJax.Hub.Queue(['Text', mjOutBox, '\\text{Check your syntax and try again}']);
                        }
                    }
                });
            });
        </script>
    </body>
</html>
